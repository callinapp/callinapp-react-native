if(!navigator.mediaDevices){navigator.mediaDevices={};}var enumerateDevices=function enumerateDevices(kind){if(!navigator.mediaDevices.enumerateDevices){console.log("enumerateDevices() not supported.");return Promise.resolve([]);}if(!kind){return navigator.mediaDevices.enumerateDevices();}return navigator.mediaDevices.enumerateDevices().then(function(devices){return devices.filter(function(device){return device.kind===kind;});});};var getUserMedia=function getUserMedia(constraints){if(!navigator.mediaDevices.getUserMedia){navigator.mediaDevices.getUserMedia=function(constraints){var getUserMedia=navigator.webkitGetUserMedia||navigator.mozGetUserMedia;if(!getUserMedia){return Promise.reject(new Error('getUserMedia is not implemented in this browser'));}return new Promise(function(resolve,reject){getUserMedia.call(navigator,constraints,resolve,reject);});};}return navigator.mediaDevices.getUserMedia(constraints);};var checkUserMediaPermission=function checkUserMediaPermission(constraints){return new Promise(function(resolve){getUserMedia(constraints).then(function(stream){stream.getTracks().forEach(function(track){track.stop();});return resolve(true);}).catch(function(e){return resolve(false);});});};module.exports={RTCPeerConnection:window.RTCPeerConnection,getUserMedia:getUserMedia,getDisplayMedia:navigator.mediaDevices.getDisplayMedia?function(constraints){return navigator.mediaDevices.getDisplayMedia(constraints);}:null,enumerateDevices:enumerateDevices,getSupportedConstraints:function getSupportedConstraints(){return navigator.mediaDevices.getSupportedConstraints?navigator.mediaDevices.getSupportedConstraints():{};},checkUserMediaPermission:checkUserMediaPermission};